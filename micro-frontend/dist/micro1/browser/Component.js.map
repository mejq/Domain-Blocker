{
  "version": 3,
  "sources": ["../../../micro1/src/app/add-domain.component.ts", "../../../micro1/src/app/domain_blocker.html", "../../../micro1/src/app/domain.service.ts"],
  "sourcesContent": ["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormsModule, Validators} from '@angular/forms';\nimport {DomainBlockService, BlockedDomain} from './domain.service'; //dikkat\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterOutlet} from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: 'domain_blocker.html',\n  styleUrls: ['styles.css']  ,\n  // ya da uygun göreceli yol\n\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterOutlet]\n})\n\nexport class App  {\n\n  onInputChange(event: Event) {\n    const value = (event.target as HTMLInputElement).value;\n    const eventToSend = new CustomEvent('domain-changed-from-micro1', {\n      detail: value\n    });\n    window.dispatchEvent(eventToSend);\n  }\n\n  ngOnInit() {\n    window.addEventListener('reset-micro1-form',this.domainForm.reset); //dikkat\n  }\n  ngOnDestroy() {\n    window.removeEventListener('reset-micro1-form',this.domainForm.reset);\n  }\n\n  domainForm: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private domainService: DomainBlockService\n  ) {\n    this.domainForm = this.fb.group({\n      domain: ['', [Validators.required, Validators.pattern('^(?!://)([a-zA-Z0-9-_]+\\\\.)+[a-zA-Z]{2,6}$')]]\n    });\n  }\n\n  //ÖNEMLİ addddomainde dbden mi var yok kontrolu yapılsın uoksa halıhazırda micro2 de loaddomainsten mi alınsın\n  addDomain() {\n    const domainValue = this.domainForm.value.domain;\n    const event = new CustomEvent('add-domain-to-micro2',{\n      detail: domainValue  // domaini micro2 ye gonderdık orada tablo eklememelrı olck\n    })\n    this.domainForm.reset();\n    console.log(domainValue);\n  }\n}\n", "<header>Micro1</header>\n<router-outlet>\n<main>\n    <header class=\"brand-name\">\n\n    </header>\n    <section class=\"content\">\n      <form [formGroup]=\"domainForm\" (ngSubmit)=\"addDomain()\">\n        <h4>Domain Block</h4>\n        <input type=\"text\" formControlName=\"domain\" placeholder=\"Enter domain\"/>\n        <button type=\"submit\" [disabled]=\"domainForm.invalid\">Add</button>\n      </form>\n    </section>\n  </main>\n  </router-outlet>\n", "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {observable, Observable} from 'rxjs';\n\nexport interface BlockedDomain {\n  id: string;\n  domain: string;\n  appliedAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainBlockService {\n  domains: BlockedDomain[] = [];\n  private apiUrl = 'http://localhost:8080/api/domain-block'; // Backend URL'inizi buraya yazın\n\n  constructor(private http: HttpClient) {}\n\n  blockDomains(domains: string[]): Observable<any> {\n    return this.http.post(this.apiUrl, {domains},{responseType:'text'});\n  }\n}\n"],
  "mappings": ";;;AAAA,SAAQ,iBAAwB;AAChC,SAAgC,aAAa,kBAAiB;AAE9D,SAAQ,oBAAmB;AAC3B,SAAQ,2BAA0B;AAClC,SAAQ,oBAAmB;;;;;AEL3B,SAAS,kBAAkB;;;AAarB,IAAO,qBAAP,MAAO,oBAAkB;EAIT;EAHpB,UAA2B,CAAA;EACnB,SAAS;;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;EAEvC,aAAa,SAAiB;AAC5B,WAAO,KAAK,KAAK,KAAK,KAAK,QAAQ,EAAC,QAAO,GAAE,EAAC,cAAa,OAAM,CAAC;EACpE;;qCARW,qBAAkB,sBAAA,aAAA,CAAA;EAAA;+EAAlB,qBAAkB,SAAlB,oBAAkB,WAAA,YAFjB,OAAM,CAAA;;;;AFMd,IAAO,MAAP,MAAO,KAAG;EAmBJ;EACA;EAlBV,cAAc,OAAY;AACxB,UAAM,QAAS,MAAM,OAA4B;AACjD,UAAM,cAAc,IAAI,YAAY,8BAA8B;MAChE,QAAQ;KACT;AACD,WAAO,cAAc,WAAW;EAClC;EAEA,WAAQ;AACN,WAAO,iBAAiB,qBAAoB,KAAK,WAAW,KAAK;EACnE;EACA,cAAW;AACT,WAAO,oBAAoB,qBAAoB,KAAK,WAAW,KAAK;EACtE;EAEA;EACA,YACU,IACA,eAAiC;AADjC,SAAA,KAAA;AACA,SAAA,gBAAA;AAER,SAAK,aAAa,KAAK,GAAG,MAAM;MAC9B,QAAQ,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,QAAQ,4CAA4C,CAAC,CAAC;KACrG;EACH;;EAGA,YAAS;AACP,UAAM,cAAc,KAAK,WAAW,MAAM;AAC1C,UAAM,QAAQ,IAAI,YAAY,wBAAuB;MACnD,QAAQ;;KACT;AACD,SAAK,WAAW,MAAK;AACrB,YAAQ,IAAI,WAAW;EACzB;;qCAnCW,MAAG,gCAAA,eAAA,GAAA,gCAAA,kBAAA,CAAA;EAAA;6EAAH,MAAG,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,UAAA,eAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,UAAA,CAAA,GAAA,UAAA,SAAA,aAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACjBhB,MAAA,6BAAA,GAAA,QAAA;AAAQ,MAAA,qBAAA,GAAA,QAAA;AAAM,MAAA,2BAAA;AACd,MAAA,6BAAA,GAAA,eAAA,EAAe,GAAA,MAAA;AAEX,MAAA,wBAAA,GAAA,UAAA,CAAA;AAGA,MAAA,6BAAA,GAAA,WAAA,CAAA,EAAyB,GAAA,QAAA,CAAA;AACQ,MAAA,yBAAA,YAAA,SAAA,wCAAA;AAAA,eAAY,IAAA,UAAA;MAAW,CAAA;AACpD,MAAA,6BAAA,GAAA,IAAA;AAAI,MAAA,qBAAA,GAAA,cAAA;AAAY,MAAA,2BAAA;AAChB,MAAA,wBAAA,GAAA,SAAA,CAAA;AACA,MAAA,6BAAA,IAAA,UAAA,CAAA;AAAsD,MAAA,qBAAA,IAAA,KAAA;AAAG,MAAA,2BAAA,EAAS,EAC7D,EACC,EACL;;;AANG,MAAA,wBAAA,CAAA;AAAA,MAAA,yBAAA,aAAA,IAAA,UAAA;AAGkB,MAAA,wBAAA,CAAA;AAAA,MAAA,yBAAA,YAAA,IAAA,WAAA,OAAA;;oBDIlB,cAAc,qBAAmB,wBAAA,0BAAA,qBAAA,0BAAA,wBAAA,qBAAE,aAAa,YAAY,GAAA,eAAA,EAAA,CAAA;;;iFAG3D,KAAG,EAAA,WAAA,OAAA,UAAA,0CAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const in_vfs_1 = require("./in-vfs");
const user_error_1 = require("../error/user-error");
vitest_1.expect.extend({
    toBeVfsFile(received, expected) {
        return {
            pass: received === (0, in_vfs_1.inVfs)(expected),
            message: () => `expected ${received} to be ${expected}`,
        };
    },
    toBeVfsFiles(received, expected) {
        return {
            pass: JSON.stringify(received.sort()) ===
                JSON.stringify(expected.map(in_vfs_1.inVfs).sort()),
            message: () => `expected ${received.toString()} to be ${expected.toString()}`,
        };
    },
    toThrowUserError(fn, userError) {
        let pass = false;
        let actual = 'no error';
        const { code, message } = userError;
        try {
            fn();
        }
        catch (error) {
            actual = error;
            pass =
                error instanceof user_error_1.UserError &&
                    error.message === message &&
                    error.code === code;
        }
        return {
            pass,
            message: () => {
                return `expected to throw UserError: ${code} - ${message}`;
            },
            actual,
            expected: userError,
        };
    },
});
//# sourceMappingURL=expect.extensions.js.map
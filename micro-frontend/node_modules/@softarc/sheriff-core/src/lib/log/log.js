"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reset = void 0;
exports.log = log;
exports.doLog = doLog;
const process_1 = require("process");
const after_init_1 = require("../main/after-init");
const getFs_1 = __importDefault(require("../fs/getFs"));
let logQueue = [];
let initialized = false;
let enabled = false;
/**
 * resets the logger. only used in tests.
 */
const reset = () => {
    initialized = false;
    enabled = false;
    logQueue = [];
};
exports.reset = reset;
(0, after_init_1.afterInit)((config) => {
    enabled = Boolean(config === null || config === void 0 ? void 0 : config.log);
    if (enabled) {
        for (const element of logQueue) {
            doLog(element);
        }
    }
    logQueue = [];
    initialized = true;
});
function log(message, scope = '', level) {
    const data = [scope, new Date().toISOString(), level, process_1.pid, message].join(' - ');
    if (initialized) {
        if (enabled) {
            doLog(data);
        }
    }
    else {
        logQueue.push(data);
    }
}
function doLog(data) {
    (0, getFs_1.default)().appendFile('sheriff.log', data);
}
//# sourceMappingURL=log.js.map
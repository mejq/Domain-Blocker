"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Module = void 0;
const file_info_1 = require("./file.info");
const fs_path_1 = require("../file-info/fs-path");
const getFs_1 = __importDefault(require("../fs/getFs"));
/**
 * Since modules are constructed incrementally with in-place
 * modification, e.g. `addFileInfo`, a class is the better
 * approach here.
 */
class Module {
    constructor(path, fileInfoMap, getFileInfo, isRoot, hasBarrel, barrelFile) {
        this.path = path;
        this.fileInfoMap = fileInfoMap;
        this.getFileInfo = getFileInfo;
        this.isRoot = isRoot;
        this.hasBarrel = hasBarrel;
        this.barrelFile = barrelFile;
        this.fileInfos = [];
    }
    addFileInfo(unassignedFileInfo) {
        const fileInfo = new file_info_1.FileInfo(unassignedFileInfo, this, this.getFileInfo);
        this.fileInfoMap.set(fileInfo.path, fileInfo);
        this.fileInfos.push(fileInfo);
    }
    get barrelPath() {
        return (0, fs_path_1.toFsPath)((0, getFs_1.default)().join(this.path, this.barrelFile));
    }
}
exports.Module = Module;
//# sourceMappingURL=module.js.map
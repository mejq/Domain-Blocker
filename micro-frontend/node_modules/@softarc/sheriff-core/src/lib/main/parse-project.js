"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseProject = void 0;
const generate_unassigned_file_info_1 = require("../file-info/generate-unassigned-file-info");
const get_project_dirs_from_file_info_1 = require("../modules/get-project-dirs-from-file-info");
const create_modules_1 = require("../modules/create-modules");
const fill_file_info_map_1 = require("../modules/fill-file-info-map");
const throw_if_null_1 = __importDefault(require("../util/throw-if-null"));
const find_module_paths_1 = require("../modules/find-module-paths");
const parseProject = (entryFile, traverse, tsData, config, fileContent) => {
    const unassignedFileInfo = (0, generate_unassigned_file_info_1.generateUnassignedFileInfo)(entryFile, !traverse, tsData, fileContent);
    const rootDir = tsData.rootDir;
    const projectDirs = (0, get_project_dirs_from_file_info_1.getProjectDirsFromFileInfo)(unassignedFileInfo, rootDir);
    const fileInfoMap = new Map();
    const getFileInfo = (path) => (0, throw_if_null_1.default)(fileInfoMap.get(path), `cannot find FileInfo for ${path}`);
    const modulePaths = (0, find_module_paths_1.findModulePaths)(projectDirs, rootDir, config);
    const modules = (0, create_modules_1.createModules)(modulePaths, fileInfoMap, getFileInfo, {
        entryFileInfo: unassignedFileInfo,
        rootDir,
        barrelFile: config.barrelFileName,
    });
    (0, fill_file_info_map_1.fillFileInfoMap)(fileInfoMap, modules);
    const fileInfo = getFileInfo(unassignedFileInfo.path);
    return {
        fileInfo,
        rootDir,
        getFileInfo,
        modules,
    };
};
exports.parseProject = parseProject;
//# sourceMappingURL=parse-project.js.map
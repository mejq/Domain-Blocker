import { Fs } from './fs';
import { FsPath } from '../file-info/fs-path';
export declare class DefaultFs extends Fs {
    appendFile(filename: string, contents: string): void;
    writeFile: (filename: string, contents: string) => void;
    readFile: (path: string) => string;
    readDirectory(directory: FsPath, filter?: 'none' | 'directory'): FsPath[];
    removeDir: (path: string) => void;
    createDir: (path: string) => void;
    exists(path: string): path is FsPath;
    tmpdir: () => string;
    cwd: () => string;
    findFiles: (directory: FsPath, filename: string, found?: FsPath[], referencePath?: string) => FsPath[];
    reset(): void;
    findNearestParentFile: (referenceFile: FsPath, filename: string) => FsPath;
    isAbsolute: (p: string) => boolean;
    split: (p: string) => string[];
    print: () => undefined;
    isFile(path: FsPath): boolean;
}
declare const defaultFs: DefaultFs;
export default defaultFs;

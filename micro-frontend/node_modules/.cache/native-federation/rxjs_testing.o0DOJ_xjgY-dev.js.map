{
  "version": 3,
  "sources": ["../../rxjs/dist/esm5/internal/testing/TestScheduler.js", "../../rxjs/dist/esm5/internal/testing/ColdObservable.js", "../../rxjs/dist/esm5/internal/testing/SubscriptionLog.js", "../../rxjs/dist/esm5/internal/testing/SubscriptionLoggable.js", "../../rxjs/dist/esm5/internal/util/applyMixins.js", "../../rxjs/dist/esm5/internal/testing/HotObservable.js"],
  "sourcesContent": ["import { __extends, __read, __spreadArray, __values } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nimport { COMPLETE_NOTIFICATION, errorNotification, nextNotification } from '../NotificationFactories';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { performanceTimestampProvider } from '../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../scheduler/animationFrameProvider';\nimport { immediateProvider } from '../scheduler/immediateProvider';\nimport { intervalProvider } from '../scheduler/intervalProvider';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nvar defaultMaxFrame = 750;\nvar TestScheduler = function (_super) {\n  __extends(TestScheduler, _super);\n  function TestScheduler(assertDeepEqual) {\n    var _this = _super.call(this, VirtualAction, defaultMaxFrame) || this;\n    _this.assertDeepEqual = assertDeepEqual;\n    _this.hotObservables = [];\n    _this.coldObservables = [];\n    _this.flushTests = [];\n    _this.runMode = false;\n    return _this;\n  }\n  TestScheduler.prototype.createTime = function (marbles) {\n    var indexOf = this.runMode ? marbles.trim().indexOf('|') : marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  };\n  TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    var cold = new ColdObservable(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  };\n  TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    var subject = new HotObservable(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  };\n  TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n    var _this = this;\n    var messages = [];\n    observable.subscribe({\n      next: function (value) {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: nextNotification(value)\n        });\n      },\n      error: function (error) {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: errorNotification(error)\n        });\n      },\n      complete: function () {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: COMPLETE_NOTIFICATION\n        });\n      }\n    });\n    return messages;\n  };\n  TestScheduler.prototype.expectObservable = function (observable, subscriptionMarbles) {\n    var _this = this;\n    if (subscriptionMarbles === void 0) {\n      subscriptionMarbles = null;\n    }\n    var actual = [];\n    var flushTest = {\n      actual: actual,\n      ready: false\n    };\n    var subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n    var subscriptionFrame = subscriptionParsed.subscribedFrame === Infinity ? 0 : subscriptionParsed.subscribedFrame;\n    var unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n    var subscription;\n    this.schedule(function () {\n      subscription = observable.subscribe({\n        next: function (x) {\n          var value = x instanceof Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n          actual.push({\n            frame: _this.frame,\n            notification: nextNotification(value)\n          });\n        },\n        error: function (error) {\n          actual.push({\n            frame: _this.frame,\n            notification: errorNotification(error)\n          });\n        },\n        complete: function () {\n          actual.push({\n            frame: _this.frame,\n            notification: COMPLETE_NOTIFICATION\n          });\n        }\n      });\n    }, subscriptionFrame);\n    if (unsubscriptionFrame !== Infinity) {\n      this.schedule(function () {\n        return subscription.unsubscribe();\n      }, unsubscriptionFrame);\n    }\n    this.flushTests.push(flushTest);\n    var runMode = this.runMode;\n    return {\n      toBe: function (marbles, values, errorValue) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n      },\n      toEqual: function (other) {\n        flushTest.ready = true;\n        flushTest.expected = [];\n        _this.schedule(function () {\n          subscription = other.subscribe({\n            next: function (x) {\n              var value = x instanceof Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: nextNotification(value)\n              });\n            },\n            error: function (error) {\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: errorNotification(error)\n              });\n            },\n            complete: function () {\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: COMPLETE_NOTIFICATION\n              });\n            }\n          });\n        }, subscriptionFrame);\n      }\n    };\n  };\n  TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n    var flushTest = {\n      actual: actualSubscriptionLogs,\n      ready: false\n    };\n    this.flushTests.push(flushTest);\n    var runMode = this.runMode;\n    return {\n      toBe: function (marblesOrMarblesArray) {\n        var marblesArray = typeof marblesOrMarblesArray === 'string' ? [marblesOrMarblesArray] : marblesOrMarblesArray;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(function (marbles) {\n          return TestScheduler.parseMarblesAsSubscriptions(marbles, runMode);\n        }).filter(function (marbles) {\n          return marbles.subscribedFrame !== Infinity;\n        });\n      }\n    };\n  };\n  TestScheduler.prototype.flush = function () {\n    var _this = this;\n    var hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n    _super.prototype.flush.call(this);\n    this.flushTests = this.flushTests.filter(function (test) {\n      if (test.ready) {\n        _this.assertDeepEqual(test.actual, test.expected);\n        return false;\n      }\n      return true;\n    });\n  };\n  TestScheduler.parseMarblesAsSubscriptions = function (marbles, runMode) {\n    var _this = this;\n    if (runMode === void 0) {\n      runMode = false;\n    }\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog(Infinity);\n    }\n    var characters = __spreadArray([], __read(marbles));\n    var len = characters.length;\n    var groupStart = -1;\n    var subscriptionFrame = Infinity;\n    var unsubscriptionFrame = Infinity;\n    var frame = 0;\n    var _loop_1 = function (i) {\n      var nextFrame = frame;\n      var advanceFrameBy = function (count) {\n        nextFrame += count * _this.frameTimeFactor;\n      };\n      var c = characters[i];\n      switch (c) {\n        case ' ':\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          if (subscriptionFrame !== Infinity) {\n            throw new Error(\"found a second subscription point '^' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          advanceFrameBy(1);\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Infinity) {\n            throw new Error(\"found a second unsubscription point '!' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          if (runMode && c.match(/^[0-9]$/)) {\n            if (i === 0 || characters[i - 1] === ' ') {\n              var buffer = characters.slice(i).join('');\n              var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                var duration = parseFloat(match[1]);\n                var unit = match[2];\n                var durationInMs = void 0;\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n                advanceFrameBy(durationInMs / this_1.frameTimeFactor);\n                break;\n              }\n            }\n          }\n          throw new Error(\"there can only be '^' and '!' markers in a \" + \"subscription marble diagram. Found instead '\" + c + \"'.\");\n      }\n      frame = nextFrame;\n      out_i_1 = i;\n    };\n    var this_1 = this,\n      out_i_1;\n    for (var i = 0; i < len; i++) {\n      _loop_1(i);\n      i = out_i_1;\n    }\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  };\n  TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables, runMode) {\n    var _this = this;\n    if (materializeInnerObservables === void 0) {\n      materializeInnerObservables = false;\n    }\n    if (runMode === void 0) {\n      runMode = false;\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' + 'unsubscription marker \"!\"');\n    }\n    var characters = __spreadArray([], __read(marbles));\n    var len = characters.length;\n    var testMessages = [];\n    var subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n    var frame = subIndex === -1 ? 0 : subIndex * -this.frameTimeFactor;\n    var getValue = typeof values !== 'object' ? function (x) {\n      return x;\n    } : function (x) {\n      if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n        return values[x].messages;\n      }\n      return values[x];\n    };\n    var groupStart = -1;\n    var _loop_2 = function (i) {\n      var nextFrame = frame;\n      var advanceFrameBy = function (count) {\n        nextFrame += count * _this.frameTimeFactor;\n      };\n      var notification = void 0;\n      var c = characters[i];\n      switch (c) {\n        case ' ':\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '|':\n          notification = COMPLETE_NOTIFICATION;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          advanceFrameBy(1);\n          break;\n        case '#':\n          notification = errorNotification(errorValue || 'error');\n          advanceFrameBy(1);\n          break;\n        default:\n          if (runMode && c.match(/^[0-9]$/)) {\n            if (i === 0 || characters[i - 1] === ' ') {\n              var buffer = characters.slice(i).join('');\n              var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                var duration = parseFloat(match[1]);\n                var unit = match[2];\n                var durationInMs = void 0;\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n                advanceFrameBy(durationInMs / this_2.frameTimeFactor);\n                break;\n              }\n            }\n          }\n          notification = nextNotification(getValue(c));\n          advanceFrameBy(1);\n          break;\n      }\n      if (notification) {\n        testMessages.push({\n          frame: groupStart > -1 ? groupStart : frame,\n          notification: notification\n        });\n      }\n      frame = nextFrame;\n      out_i_2 = i;\n    };\n    var this_2 = this,\n      out_i_2;\n    for (var i = 0; i < len; i++) {\n      _loop_2(i);\n      i = out_i_2;\n    }\n    return testMessages;\n  };\n  TestScheduler.prototype.createAnimator = function () {\n    var _this = this;\n    if (!this.runMode) {\n      throw new Error('animate() must only be used in run mode');\n    }\n    var lastHandle = 0;\n    var map;\n    var delegate = {\n      requestAnimationFrame: function (callback) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        var handle = ++lastHandle;\n        map.set(handle, callback);\n        return handle;\n      },\n      cancelAnimationFrame: function (handle) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        map.delete(handle);\n      }\n    };\n    var animate = function (marbles) {\n      var e_1, _a;\n      if (map) {\n        throw new Error('animate() must not be called more than once within run()');\n      }\n      if (/[|#]/.test(marbles)) {\n        throw new Error('animate() must not complete or error');\n      }\n      map = new Map();\n      var messages = TestScheduler.parseMarbles(marbles, undefined, undefined, undefined, true);\n      try {\n        for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\n          var message = messages_1_1.value;\n          _this.schedule(function () {\n            var e_2, _a;\n            var now = _this.now();\n            var callbacks = Array.from(map.values());\n            map.clear();\n            try {\n              for (var callbacks_1 = (e_2 = void 0, __values(callbacks)), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n                var callback = callbacks_1_1.value;\n                callback(now);\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n          }, message.frame);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n    return {\n      animate: animate,\n      delegate: delegate\n    };\n  };\n  TestScheduler.prototype.createDelegates = function () {\n    var _this = this;\n    var lastHandle = 0;\n    var scheduleLookup = new Map();\n    var run = function () {\n      var now = _this.now();\n      var scheduledRecords = Array.from(scheduleLookup.values());\n      var scheduledRecordsDue = scheduledRecords.filter(function (_a) {\n        var due = _a.due;\n        return due <= now;\n      });\n      var dueImmediates = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'immediate';\n      });\n      if (dueImmediates.length > 0) {\n        var _a = dueImmediates[0],\n          handle = _a.handle,\n          handler = _a.handler;\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      var dueIntervals = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'interval';\n      });\n      if (dueIntervals.length > 0) {\n        var firstDueInterval = dueIntervals[0];\n        var duration = firstDueInterval.duration,\n          handler = firstDueInterval.handler;\n        firstDueInterval.due = now + duration;\n        firstDueInterval.subscription = _this.schedule(run, duration);\n        handler();\n        return;\n      }\n      var dueTimeouts = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'timeout';\n      });\n      if (dueTimeouts.length > 0) {\n        var _b = dueTimeouts[0],\n          handle = _b.handle,\n          handler = _b.handler;\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      throw new Error('Expected a due immediate or interval');\n    };\n    var immediate = {\n      setImmediate: function (handler) {\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now(),\n          duration: 0,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, 0),\n          type: 'immediate'\n        });\n        return handle;\n      },\n      clearImmediate: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    var interval = {\n      setInterval: function (handler, duration) {\n        if (duration === void 0) {\n          duration = 0;\n        }\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now() + duration,\n          duration: duration,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, duration),\n          type: 'interval'\n        });\n        return handle;\n      },\n      clearInterval: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    var timeout = {\n      setTimeout: function (handler, duration) {\n        if (duration === void 0) {\n          duration = 0;\n        }\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now() + duration,\n          duration: duration,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, duration),\n          type: 'timeout'\n        });\n        return handle;\n      },\n      clearTimeout: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    return {\n      immediate: immediate,\n      interval: interval,\n      timeout: timeout\n    };\n  };\n  TestScheduler.prototype.run = function (callback) {\n    var prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n    var prevMaxFrames = this.maxFrames;\n    TestScheduler.frameTimeFactor = 1;\n    this.maxFrames = Infinity;\n    this.runMode = true;\n    var animator = this.createAnimator();\n    var delegates = this.createDelegates();\n    animationFrameProvider.delegate = animator.delegate;\n    dateTimestampProvider.delegate = this;\n    immediateProvider.delegate = delegates.immediate;\n    intervalProvider.delegate = delegates.interval;\n    timeoutProvider.delegate = delegates.timeout;\n    performanceTimestampProvider.delegate = this;\n    var helpers = {\n      cold: this.createColdObservable.bind(this),\n      hot: this.createHotObservable.bind(this),\n      flush: this.flush.bind(this),\n      time: this.createTime.bind(this),\n      expectObservable: this.expectObservable.bind(this),\n      expectSubscriptions: this.expectSubscriptions.bind(this),\n      animate: animator.animate\n    };\n    try {\n      var ret = callback(helpers);\n      this.flush();\n      return ret;\n    } finally {\n      TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n      this.maxFrames = prevMaxFrames;\n      this.runMode = false;\n      animationFrameProvider.delegate = undefined;\n      dateTimestampProvider.delegate = undefined;\n      immediateProvider.delegate = undefined;\n      intervalProvider.delegate = undefined;\n      timeoutProvider.delegate = undefined;\n      performanceTimestampProvider.delegate = undefined;\n    }\n  };\n  TestScheduler.frameTimeFactor = 10;\n  return TestScheduler;\n}(VirtualTimeScheduler);\nexport { TestScheduler };\n", "import { __extends } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { observeNotification } from '../Notification';\nvar ColdObservable = function (_super) {\n  __extends(ColdObservable, _super);\n  function ColdObservable(messages, scheduler) {\n    var _this = _super.call(this, function (subscriber) {\n      var observable = this;\n      var index = observable.logSubscribedFrame();\n      var subscription = new Subscription();\n      subscription.add(new Subscription(function () {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscription;\n    }) || this;\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n  ColdObservable.prototype.scheduleMessages = function (subscriber) {\n    var messagesLength = this.messages.length;\n    for (var i = 0; i < messagesLength; i++) {\n      var message = this.messages[i];\n      subscriber.add(this.scheduler.schedule(function (state) {\n        var _a = state,\n          notification = _a.message.notification,\n          destination = _a.subscriber;\n        observeNotification(notification, destination);\n      }, message.frame, {\n        message: message,\n        subscriber: subscriber\n      }));\n    }\n  };\n  return ColdObservable;\n}(Observable);\nexport { ColdObservable };\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n", "var SubscriptionLog = function () {\n  function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n    if (unsubscribedFrame === void 0) {\n      unsubscribedFrame = Infinity;\n    }\n    this.subscribedFrame = subscribedFrame;\n    this.unsubscribedFrame = unsubscribedFrame;\n  }\n  return SubscriptionLog;\n}();\nexport { SubscriptionLog };\n", "import { SubscriptionLog } from './SubscriptionLog';\nvar SubscriptionLoggable = function () {\n  function SubscriptionLoggable() {\n    this.subscriptions = [];\n  }\n  SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n    this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n    return this.subscriptions.length - 1;\n  };\n  SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n    var subscriptionLogs = this.subscriptions;\n    var oldSubscriptionLog = subscriptionLogs[index];\n    subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n  };\n  return SubscriptionLoggable;\n}();\nexport { SubscriptionLoggable };\n", "export function applyMixins(derivedCtor, baseCtors) {\n  for (var i = 0, len = baseCtors.length; i < len; i++) {\n    var baseCtor = baseCtors[i];\n    var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n    for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n      var name_1 = propertyKeys[j];\n      derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n    }\n  }\n}\n", "import { __extends } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { observeNotification } from '../Notification';\nvar HotObservable = function (_super) {\n  __extends(HotObservable, _super);\n  function HotObservable(messages, scheduler) {\n    var _this = _super.call(this) || this;\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n  HotObservable.prototype._subscribe = function (subscriber) {\n    var subject = this;\n    var index = subject.logSubscribedFrame();\n    var subscription = new Subscription();\n    subscription.add(new Subscription(function () {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(_super.prototype._subscribe.call(this, subscriber));\n    return subscription;\n  };\n  HotObservable.prototype.setup = function () {\n    var subject = this;\n    var messagesLength = subject.messages.length;\n    var _loop_1 = function (i) {\n      (function () {\n        var _a = subject.messages[i],\n          notification = _a.notification,\n          frame = _a.frame;\n        subject.scheduler.schedule(function () {\n          observeNotification(notification, subject);\n        }, frame);\n      })();\n    };\n    for (var i = 0; i < messagesLength; i++) {\n      _loop_1(i);\n    }\n  };\n  return HotObservable;\n}(Subject);\nexport { HotObservable };\napplyMixins(HotObservable, [SubscriptionLoggable]);\n"],
  "mappings": "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",
  "names": ["__extends", "SubscriptionLog", "SubscriptionLoggable", "ColdObservable", "__extends", "__extends", "HotObservable", "i", "__extends", "TestScheduler", "i", "_a"]
}

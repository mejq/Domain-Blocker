/**
 * @typedef {Object} SourceMap
 * @property {number} [version]
 * @property {string[]} sources
 * @property {string[]} names
 * @property {string} [sourceRoot]
 * @property {string[]} [sourcesContent]
 * @property {string} mappings
 * @property {string} [file]
 */
/**
 * @param {string} map
 * @returns {SourceMap}
 */
export function parseSourcemap(map: string): SourceMap;
/**
 * @param {string} code
 */
export function removeInlineSourcemap(code: string): string;
/**
 * @param {string} code
 * @param {string} [filePath]
 */
export function loadSourcemap(code: string, filePath?: string | undefined): Promise<SourceMap | null>;
/**
 * @param {SourceMap[]} sourceMaps
 */
export function mergeSourcemaps(sourceMaps: SourceMap[]): Promise<any>;
/**
 * @param {string} code
 * @param {SourceMap} sourceMap
 */
export function inlineSourcemap(code: string, sourceMap: SourceMap): string;
export type SourceMap = {
    version?: number | undefined;
    sources: string[];
    names: string[];
    sourceRoot?: string | undefined;
    sourcesContent?: string[] | undefined;
    mappings: string;
    file?: string | undefined;
};

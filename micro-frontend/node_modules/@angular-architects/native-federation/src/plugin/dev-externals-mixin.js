"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.devExternalsMixin = void 0;
const build_1 = require("@softarc/native-federation/build");
const externals_skip_list_1 = require("./externals-skip-list");
// see: https://github.com/vitejs/vite/issues/6393#issuecomment-1006819717
exports.devExternalsMixin = {
    enforce: 'pre',
    config(config) {
        var _a, _b, _c;
        config.optimizeDeps = Object.assign(Object.assign({}, ((_a = config.optimizeDeps) !== null && _a !== void 0 ? _a : {})), { exclude: [
                ...((_c = (_b = config.optimizeDeps) === null || _b === void 0 ? void 0 : _b.exclude) !== null && _c !== void 0 ? _c : []),
                ...(0, externals_skip_list_1.filterExternals)(build_1.federationBuilder.externals),
            ] });
    },
    configResolved(resolvedConfig) {
        const VALID_ID_PREFIX = `/@id/`;
        const reg = new RegExp(`${VALID_ID_PREFIX}(${build_1.federationBuilder.externals.join('|')})`, 'g');
        resolvedConfig.plugins.push({
            name: 'vite-plugin-ignore-static-import-replace-idprefix',
            transform: (code) => reg.test(code) ? code.replace(reg, (m, s1) => s1) : code,
        });
    },
    resolveId: (id) => {
        if ((0, externals_skip_list_1.filterExternals)(build_1.federationBuilder.externals).includes(id)) {
            return { id, external: true };
        }
    },
};
//# sourceMappingURL=dev-externals-mixin.js.map
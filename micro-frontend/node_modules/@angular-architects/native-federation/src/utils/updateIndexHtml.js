"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateIndexHtml = updateIndexHtml;
exports.updateScriptTags = updateScriptTags;
const tslib_1 = require("tslib");
const path = tslib_1.__importStar(require("path"));
const fs = tslib_1.__importStar(require("fs"));
function updateIndexHtml(fedOptions, nfOptions) {
    const outputPath = path.join(fedOptions.workspaceRoot, fedOptions.outputPath);
    const indexPathCands = [
        path.join(outputPath, '../server/index.server.html'),
        path.join(outputPath, 'index.html'),
    ];
    const indexPath = indexPathCands.find((c) => fs.existsSync(c));
    if (!indexPath) {
        console.error('No index.html found! Searched locations: ', indexPathCands.join(', '));
        return;
    }
    const mainName = fs
        .readdirSync(outputPath)
        .find((f) => f.startsWith('main') && f.endsWith('.js'));
    const polyfillsName = fs
        .readdirSync(outputPath)
        .find((f) => f.startsWith('polyfills') && f.endsWith('.js'));
    let indexContent = fs.readFileSync(indexPath, 'utf-8');
    indexContent = updateScriptTags(indexContent, mainName, polyfillsName, nfOptions);
    fs.writeFileSync(indexPath, indexContent, 'utf-8');
}
function updateScriptTags(indexContent, mainName, polyfillsName, nfOptions) {
    const esmsOptions = Object.assign({ shimMode: true }, nfOptions.esmsInitOptions);
    const htmlFragment = `
<script type="esms-options">${JSON.stringify(esmsOptions)}</script>
`;
    indexContent = indexContent.replace(/<script src="(.*?polyfills.*?)".*?><\/script>/, '<script type="module" src="$1"></script>');
    indexContent = indexContent.replace(/<script src="(.*?main.*?)".*?><\/script>/, '<script type="module-shim" src="$1"></script>');
    indexContent = indexContent.replace(/(<body.*?>)/, `$1\n\t\t${htmlFragment}`);
    return indexContent;
}
//# sourceMappingURL=updateIndexHtml.js.map